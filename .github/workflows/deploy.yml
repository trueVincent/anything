name: CI/CD on EC2

on:
  push:
    branches:
      - main  # Trigger on push to the main branch
    paths-ignore:
      - 'todo/coverage/coverage_badge.svg'

jobs:    
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 3

    steps:
      - name: Build on EC2 via SSH
        uses: appleboy/ssh-action@v1.1.0
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ubuntu
          key: ${{ secrets.EC2_SSH_KEY }}
          port: 22
          script: |
            cd anything
            git pull -f
            echo "Removing existing containers"
            sudo docker rm -f todo-nginx 2>/dev/null || true
            sudo docker rm -f todo-app 2>/dev/null || true
            echo "Building Django app service..."
            sudo docker build -t todo-app ./todo/.
            sudo docker run --rm --network todo -e ENV=prod todo-app python manage.py migrate
            echo "Building Nginx..."
            sudo docker build -t todo-nginx ./deployment/nginx/.
            echo "All services builded successfully!"
  
  test:
    needs: build
    runs-on: ubuntu-latest
    timeout-minutes: 3

    steps:
      - name: Test on EC2 via SSH
        uses: appleboy/ssh-action@v1.1.0
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ubuntu
          key: ${{ secrets.EC2_SSH_KEY }}
          port: 22
          script: |
            cd anything
            echo "Starting test..."
            PGPASSWORD=${{ secrets.DB_PASSWORD }} psql -h localhost -U postgres -d postgres -c "DROP DATABASE IF EXISTS test_postgres;"
            sudo docker run --rm --network todo -e ENV=prod -v ./todo/coverage:/app/coverage todo-app bash test.sh
            if [ $? -eq 0 ]; then
              echo "Tests passed successfully!"
            else
              echo "Tests failed!" >&2
              exit 1
            fi
              echo "Tested successfully!"
      
      - name: Commit and push coverage badge
        uses: appleboy/ssh-action@v1.1.0
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ubuntu
          key: ${{ secrets.EC2_SSH_KEY }}
          port: 22
          script: |
            cd anything
            git config --global user.name 'trueVincent'
            git config --global user.email 'v39215068@gmail.com'
            git stash
            git checkout -b coverage-badge || git checkout coverage-badge
            git stash pop
            git add ./todo/coverage/coverage_badge.svg
            git commit -m "Update coverage badge"
            git push -f origin coverage-badge
            git checkout main
            
  deploy:
    needs: test
    runs-on: ubuntu-latest
    timeout-minutes: 3

    steps:
      - name: Deploy on EC2 via SSH
        uses: appleboy/ssh-action@v1.1.0
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ubuntu
          key: ${{ secrets.EC2_SSH_KEY }}
          port: 22
          script: |
            cd anything
            echo "Starting Django app service..."
            sudo docker run --name todo-app --network todo -p 8000:8000 -e ENV=prod \
              -v /mnt/app-logs:/app/logs \
              -v /mnt/app-media:/mnt/media \
              -v /mnt/app-static:/mnt/static \
              -d todo-app \
              gunicorn -c gunicorn_config.py todo.wsgi:application
            echo "Starting Nginx..."
            sudo docker run --name todo-nginx --network todo -p 80:80 \
              -v /mnt/app-static:/mnt/app-static \
              -d todo-nginx
            echo "All services started successfully!"
